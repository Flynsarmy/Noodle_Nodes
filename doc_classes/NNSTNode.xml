<?xml version="1.0" encoding="UTF-8" ?>
<class name="NNSTNode" inherits="NNSTTickedNodes" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		Runs business logic for a state tree.
	</brief_description>
	<description>
		This is the workhorse of the State Tree. It acts as all the other levels of the state tree other than the tree root. If a [NNSTNode] has no child nodes, it is considered a leaf node. If it has child nodes, it is considered like a selector in a behaviour tree: it will evaluate its child nodes to find a leaf node to activate.
		To make use of the [NNSTNode], define the following methods for all the nodes:
		[gdscript]
		extends NNSTNode

		func on_enter_condition() -&gt; bool:
		    # Do your logic here to decide when this node should be activated.
		    # Return true or false based on your logic.
		    return true

		func on_enter_state() -&gt; void:
		    # Initialize your state here.
		    pass

		func on_exit_state() -&gt; void:
		    # Clean up before exiting the state here.
		    pass

		func on_tick(delta: float) -&gt; void:
		    # Do what ever the state needs to do here.
		    pass
		[/gdscript]
	</description>
	<tutorials>
	</tutorials>
</class>
